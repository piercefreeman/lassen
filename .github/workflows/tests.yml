name: Run Tests

on:
  push

jobs:
  test-job:
    name: Run BE tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: lassen
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: lassen_test_db
        ports: ['5432:5432']
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install poetry
        run:
          curl -sSL https://install.python-poetry.org | python3 -

      - name: Install python dependencies
        run: |
          export PATH="/Users/runner/.local/bin:$PATH"
          cd lassen && poetry install

      - name: Run tests
        run: |
          cd lassen && poetry run pytest

  deploy:
    name: Deploy
    needs: [test-job]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install poetry
      run:
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Load python dependencies
      run: |
        export PATH="/Users/runner/.local/bin:$PATH"
        cd lassen && poetry install --extras "datasets"

    - name: Build and publish to PyPI
      env:
        PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
        PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
      run: |
        cd lassen
        poetry config http-basic.pypi $PYPI_USERNAME $PYPI_PASSWORD
        poetry build
        poetry publish
